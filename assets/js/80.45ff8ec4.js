(window.webpackJsonp=window.webpackJsonp||[]).push([[80],{556:function(t,a,s){"use strict";s.r(a);var e=s(42),n=Object(e.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h3",{attrs:{id:"_1-react中的keys作用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-react中的keys作用"}},[t._v("#")]),t._v(" 1.React中的keys作用？")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("作用：Keys是React中用于追踪列表中元素的增、删、改时的辅助标识\n\n具体：\n\tkey是列表子元素的唯一标识符，新的组件可能对这个列表进行了\n\t增加，删除，重新排列子元素的操作，有了key的话，新旧组件对比\n\t到相同的key，就可以避免节点不必要的删除与创建操作，时节点的\n\t复用性提高，达到了提高性能的目的\n\t\n\tkey 相同，但属性不同，只会更新属性；\n\tkey不同，则会销毁组件，重新创建新组件\n")])])]),s("h3",{attrs:{id:"_2-refs的作用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-refs的作用"}},[t._v("#")]),t._v(" 2.refs的作用")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("作用：安全访问某个元素或者某个组件实例的句柄。\n使用场景：媒体播放，文本选择，触发强制动画\n")])])]),s("h3",{attrs:{id:"_3-修改了state进行相关的操作"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-修改了state进行相关的操作"}},[t._v("#")]),t._v(" 3.修改了state进行相关的操作")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("1.通过setState的第二个回调函数\n2.通过生命周期函数\n")])])]),s("h3",{attrs:{id:"_4-diff算法说一下"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-diff算法说一下"}},[t._v("#")]),t._v(" 4.diff算法说一下")]),t._v(" "),s("h3",{attrs:{id:"_5-setstate什么时候是同步的-什么时候是异步的"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-setstate什么时候是同步的-什么时候是异步的"}},[t._v("#")]),t._v(" 5.setState什么时候是同步的，什么时候是异步的？")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("一.同步情况\n\t1.setTimeout里面是同步的\n\t2.原生DOM事件(addEventListener)是同步的\n\n二、异步\n\t1.合成事件\n\t2.生命周期\n")])])]),s("h3",{attrs:{id:"_6-哪里可以拿到最近的state值"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_6-哪里可以拿到最近的state值"}},[t._v("#")]),t._v(" 6.哪里可以拿到最近的state值")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("1.生命周期函数componentDidUpdate\n\n2.setState里面的第二个回调参数可以拿到最近的值\n")])])]),s("h3",{attrs:{id:"_7-多个setstate的合并"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_7-多个setstate的合并"}},[t._v("#")]),t._v(" 7.多个setState的合并")]),t._v(" "),s("ul",[s("li",[t._v("还是1")]),t._v(" "),s("li",[t._v("源码内部用了do while循环")])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("increment")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setState")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      counter"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("state"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("counter "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setState")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      counter"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("state"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("counter "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setState")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      counter"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("state"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("counter "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("ul",[s("li",[t._v("如果想要它累加呢？")]),t._v(" "),s("li",[t._v("将第一个参数设置为函数(prevState, props),拿到先前的state")])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("increment")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setState")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("prevState"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" props")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      counter"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" prevState"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("counter "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setState")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("prevState"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" props")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      counter"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" prevState"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("counter "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setState")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("prevState"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" props")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      counter"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" prevState"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("counter "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h3",{attrs:{id:"_8-父子组件通信-兄弟组件通信"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_8-父子组件通信-兄弟组件通信"}},[t._v("#")]),t._v(" 8.父子组件通信/兄弟组件通信")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("Context/eventBus\n父传子：props\n子传父：props，在父组件创建好函数，传入props中，在子组件里取出来，从而达到使用父组件的state。\n兄弟：event bus安装第三方、context Provider提供数据，Consumer里面使用数据\nredux\n")])])]),s("h3",{attrs:{id:"_9-react渲染dom的原理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_9-react渲染dom的原理"}},[t._v("#")]),t._v(" 9.react渲染DOM的原理")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("JSX -> 虚拟DOM -> 真实DOM\n1.首先我们一般都使用JSX去写一些DOM，但本质上这是一种语法糖，内部会帮我们做一个转换，将JSX语法转换成\nReact.createElement(标签，属性，子组件)这个函数。\n2.React.createElement：\n\t这个函数主要做三样事情：\n\t\t1.取出config属性\n\t\t\t1.key，ref，source等等\n\t\t\t2.创建一个属性的对象，将每个属性通过for in循环config进行存储至props中\n\t\t2.处理children\n\t\t\t1.判断孩子长度是否>1，1的话props.children=children;\n\t\t\t2.>1的话，创建一个数组childrenArray，通过遍历children，将数组赋值，最后props.children=childrenArray\n\t\t3.返回ReactElement（虚拟DOM）\n")])])]),s("h3",{attrs:{id:"_10-react更新流程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_10-react更新流程"}},[t._v("#")]),t._v(" 10.React更新流程")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("props/state改变 -> render函数重新执行 -> 产生新的DOM树\n-> 新旧DOM树进行diff -> 计算差异进行更新 -> 更新到真实的DOM\n")])])]),s("h3",{attrs:{id:"_11-react和vue的差异"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_11-react和vue的差异"}},[t._v("#")]),t._v(" 11.React和Vue的差异")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("1.创建组件的方式\n\tvue通过.vue文件就可以创建一个组件\n\treact通过js创建类组件(继承Component)和函数组件\n\n2.更新状态不一样\n\tvue拿到data可以直接进行修改\n\treact通过setState修改，用新的state替换旧state\n\n3.生命周期\n\tvue里面有beforeCreate，created ，react没有\n\tvue没有手动判断组件是否需要更新，react有shouldComponentUpdate\n\n4.组件通信\n\tvue父传子props，子传父通过emit。react的props则是两者都可以\n\t跨组件vue用事件总线，react用context\n\t\n5.书写方式\n\tvue封装了很多指令：v-bind，v-for；react更多的是用原生js，更加纯粹\n")])])]),s("h3",{attrs:{id:"_12-jsx的本质-虚拟dom的创建过程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_12-jsx的本质-虚拟dom的创建过程"}},[t._v("#")]),t._v(" 12.jsx的本质/虚拟DOM的创建过程")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("jsx 仅仅只是 React.createElement(component, props, ...children) 函数的语法糖。\n所有的jsx最终都会被转换成React.createElement的函数调用\n")])])]),s("h3",{attrs:{id:"_13-useselector缺点-怎么解决"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_13-useselector缺点-怎么解决"}},[t._v("#")]),t._v(" 13.useSelector缺点？怎么解决")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("他会使本不该重新渲染的页面发生重新渲染，\n第二个参数用shallowEqual，进行浅层比较\n")])])]),s("h3",{attrs:{id:"_14-为什么使用redux-redux更新数据后为什么重新渲染"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_14-为什么使用redux-redux更新数据后为什么重新渲染"}},[t._v("#")]),t._v(" 14.为什么使用Redux? Redux更新数据后为什么重新渲染")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("1.redux完美解决了组件之间的通信问题，不然就要通过props传来传去，有redux，每个组件都可以从redux获取最新store数据，也可以修改store里面的数据。\n2.数据修改时可以被追踪\n\n重新渲染：\n\t在componentDidMount订阅了store的变化，且在componentWillUnmount进行取消订阅。\n\t用connect纯函数实现的\n")])])]),s("h3",{attrs:{id:"_14-纯函数connect"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_14-纯函数connect"}},[t._v("#")]),t._v(" 14.纯函数connect")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("\n")])])]),s("h3",{attrs:{id:"_15-请求数据存到redux过程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_15-请求数据存到redux过程"}},[t._v("#")]),t._v(" 15.请求数据存到redux过程")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.")]),t._v("定义接口，定义常量\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2.")]),t._v("在reducer里面定义数组用于存储\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3.")]),t._v("在reducer里面"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v("，并返回修改的数据\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4.")]),t._v("在actionCreators里面定义getXXXAction\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5.")]),t._v("在actionCreators里面定义changeXXXAction供getXXXAction使用\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("changeHotRecommendAction")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("res")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      type"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" actionTypes"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("CHANGE_HOT_RECOMMEND")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      hotRecommend"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" res"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("banners\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("getHotRecommendAction")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("dispatch")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getHotRecommend")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("then")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("res")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n          console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("res"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n          "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("dispatch")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("changeHotRecommendAction")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("res"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("6.")]),t._v("在相关页面使用useDispatch和useEffect请求\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" hotRecommend "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("useSelector")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("state")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    hotRecommend"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" state"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getIn")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'recommend'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("hotRecommend"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("shallowEqual"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  \n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" dispatch "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("useDispatch")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 其他hooks")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("useEffect")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("dispatch")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getHotRecommendAction")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("limit"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("dispatch"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("h3",{attrs:{id:"_15-redux请求数据过程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_15-redux请求数据过程"}},[t._v("#")]),t._v(" 15.redux请求数据过程")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("1.首先封装请求数据的函数，导出\n2.定义常量。\n4.在actionCreators定义action，action由type和payload对象组成。拿到请求结果，放入state里面\n3.在业务代码中dispatch(action)，他会自动调用reducer。\n3.在reducer里面进行switch case actionType，返回最新的state\n5.在组件里面进行useEffect请求。\n")])])]),s("h3",{attrs:{id:"_16-生命周期"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_16-生命周期"}},[t._v("#")]),t._v(" 16.生命周期")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("常用：\n1.Constructor：初始化内部state，绑定this\n2.componentDidMount: 组件挂载到DOM上就会回调\n\t1.依赖DOM的操作\n\t2.发送网络请求\n\t3.添加订阅事件(在unmounted里面取消)\n3.componentDidUpdate\n\t1.更新后立即调用\n\t2.如果需要与新旧props进行对比可以在这里\n4.componentWillUnmount：组件即将被移除，回调\n\t1.清理操作\n\t2.订阅事件，timer，取消网络请求\n5.shouldComponentUpdate\t\n\t1.手动判断组件是否更新\n\n不推荐使用：\n\twillMounted，willUpdate\n\t\n官方文档：\n\t官方文档分为常用生命周期和不常用生命周期\n\t\t常用生命周期：\n\t\t\t1.constructor\n\t\t\t2.render\n\t\t\t3.componentDidMount\n\t\t\t4.componentDidUpdate\n\t\t\t5.componentWillUnMount\n\t\t不常用：\n\t\t\t1.getDerivedStateFromProps：在调用render方法之前调用\n\t\t\t2.getSnapshotBeforeUpdate：在最近一次渲染输出之前调用，是组件在发生更改前那个DOM获取信息，如滚动位置。这个生命周期任何返回值都会传给componentDidUpdate。\n\t\t\t3.shouldComponentUpdate：手动判断组件是否需要更新。\n")])])]),s("h3",{attrs:{id:"_17-usememo和usecallback的区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_17-usememo和usecallback的区别"}},[t._v("#")]),t._v(" 17.useMemo和useCallback的区别")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("1.useMemo是让函数在依赖不改变的情况下，不对这个值进行重新运算\t\n1.useCallback是对函数进行缓存，用于子组件引用父组件的函数，父组重新渲染，避免函数的引用发生改变\n\n2.useMemo优化的是函数进行运算的开销\n2.useCallback优化的组件重新渲染的开销\n")])])]),s("h3",{attrs:{id:"_18-immutablejs"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_18-immutablejs"}},[t._v("#")]),t._v(" 18. ImmutableJs")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("1.使用原因\n\treducer里面很多数据，每次修改数据时就要重新浅拷贝(因为react不支持直接修改state)，返回新对象，开销大，浪\t 费性能。\n\n2.原理：修改了对象，就返回新的对象，但是旧的对象不发生改变；使用了持久化数据结构，他会尽可能利用之前的数据不会造成性能浪费，使得内存不会被浪费；是一个树结构；\n\n3.使用：\n\t1.把对象变为Immutable对象，Map(对象),但是只会浅层，使用fromJS会深拷贝转换\n\t2.设值：info.set(属性，'值')\n\t3.取值：state.get('name') 或者 state.getIn('recommend','hotRecommend')\n")])])]),s("h3",{attrs:{id:"_19-react-hooks"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_19-react-hooks"}},[t._v("#")]),t._v(" 19.react-hooks")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("1.useState 定义数据\n2.useEffect 模拟生命周期函数\n\t1.在里面做网络请求，订阅事件，取消订阅\n\t2.第一个参数相当于mounted，return那个就是unmounted\n3.useContext\n\t1.可以做一些数据的共享\n\t2.使用createContext创建相应的context\n\t3.用Provider作为数据的提供者，将想要被使用数据的组件包裹起来；\n\t4.在使用数据的组件里面使用useContext，把创建的context传入，就可以拿到共享数据\n4.useReducer\n\t1.不是reducer的替代，是useState的一中替代\n\t2.state处理的逻辑比较复杂，可以通过useReducer进行拆分\n\n5.useCallback，对性能做优化\n\t1.对函数进行了缓存，防止子组件做不必要的渲染\n\t2.用在子组件使用了父组件的函数，如果父组件重新渲染，那么函数的引用就会变，造成子组件认为两次传进来的函数不\t\t一样，从而进行渲染。\n\t3.可以使用依赖判断其是否需要更新\n\n6.useMemo\n\t1.对函数是否运行做一些优化\n\t2.在开发中，组件经常用到一些需要经过计算的属性，但是有些时候这个属性没有发生变化的，但是还是会重新进行计算\n\t3.需要一个记忆值，将它缓存下来，依赖不变的情况下就不用做不必要的计算\n")])])]),s("h3",{attrs:{id:"_20-redux-hooks"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_20-redux-hooks"}},[t._v("#")]),t._v(" 20.redux-hooks")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("1.useDispatch\n\t1.一般都在useEffect里面\n\t2.派发相应的action，做一些reducer数据的修改；\n2.useSelector\n\t1.获取redux里面的数据\n\t2.一般都会用一个浅层比较shallowEqual去\n")])])]),s("h3",{attrs:{id:"_21-setstate为什么异步"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_21-setstate为什么异步"}},[t._v("#")]),t._v(" 21.setState为什么异步?")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("1.一句话总结：显著提高性能。\n2.解释：\n\t1.每调用一次setState就代表着render频繁调用，重新渲染页面。效率低。\n\t2.异步的话可以获取到多个更新，然后批量处理。\n3.同步更新state，但是没有执行render那么state就不能和props保持同步；就会产生很多问题。\n")])])]),s("h3",{attrs:{id:"_22-为什么使用setstate-不直接修改this-state"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_22-为什么使用setstate-不直接修改this-state"}},[t._v("#")]),t._v(" 22.为什么使用setState？不直接修改this.state")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("1.直接修改this.state，React是不知道数据发生变化的。\n2.因为他没有像vue中做了数据数据监听。\n3.\n")])])]),s("h3",{attrs:{id:"_23-setstate怎么实现的"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_23-setstate怎么实现的"}},[t._v("#")]),t._v(" 23.setState怎么实现的？")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("1.setState有两个参数，第一个partialState，第二个callback\n2.首先判断partialState必须是function，object，null中的一个，否则报错\n3.执行的是this.updater.enqueueSetState(this, partialState, callback, 'setState');\n\t每个类组件都有updater\n\tenqueueSetState根据不同的上下文，生成一个currentTime，再用currentTime计算一个过期时间。\n\t这个过期时间只有两个值，一个Sync，一个Batched，对应同步，异步（批量处理）\n")])])]),s("h3",{attrs:{id:"_24-setstate如何立即获取到更新后的值"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_24-setstate如何立即获取到更新后的值"}},[t._v("#")]),t._v(" 24.setState如何立即获取到更新后的值")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("1.setState里面有第二个参数，是一个回调函数，可以在里面获取到。\n2.在componentDidUpdate生命周期也可以获取到最新的值。\n")])])]),s("h3",{attrs:{id:"_25-setstate多次合并的问题"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_25-setstate多次合并的问题"}},[t._v("#")]),t._v(" 25.setState多次合并的问题")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("1.setState在传入对象时，多次累加就只会执行一次。\n2.想要多次累加的话，可以将setState的第一个参数换为函数。\n")])])]),s("h3",{attrs:{id:"_26-高阶组件hoc"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_26-高阶组件hoc"}},[t._v("#")]),t._v(" 26.高阶组件HOC")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("概念：\n\t和高阶函数很像，把一个组件作为参数传入，经过处理，返回一个新的组件。我的理解就是在使用之前对组件做一个劫持，对它做很多的操作，再去使\t用。\n作用：\n\t使代码更优雅，代码可以复用，很多组件需要使用到一些共同属性，一个一个写就很麻烦，直接一个withRouter即可\n应用：\n\t1、增强props(withRouter)\n缺点：\n\t1.有嵌套关系，结构不够美观，阅读性较差\n\t2.出现了hooks解决了很多问题\n\n")])])]),s("h3",{attrs:{id:"_27-react传参方式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_27-react传参方式"}},[t._v("#")]),t._v(" 27.React传参方式")]),t._v(" "),s("h3",{attrs:{id:"_28-react每次setstate都会引起diff算法吗"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_28-react每次setstate都会引起diff算法吗"}},[t._v("#")]),t._v(" 28.React每次setState都会引起diff算法吗")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("不一定\n\n理由：\n\t1.当进行了SCU优化时，setState之后又进行了浅层比较，有可能就是在浅层比较阶段没有深入对比下去，然后又是state里面对象没有拷贝，造成浅层比较判定值都一样。所以，setState之后，可能不会发起diff算法。\n")])])]),s("h3",{attrs:{id:"_29-rn和react的区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_29-rn和react的区别"}},[t._v("#")]),t._v(" 29.RN和React的区别")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("RN：用对应的是移动应用平台\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tReact：渲染品台是浏览器HTML渲染\nRN：都是用JSX语法进行开发，都是利用虚拟DOM这个特性\nRN：自动匹配不同手机的大小\nRN：很多css3样式不能使用box-shadow\n")])])]),s("h3",{attrs:{id:"_30-redux原理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_30-redux原理"}},[t._v("#")]),t._v(" 30.redux原理")]),t._v(" "),s("h3",{attrs:{id:"_31-redux-dispatch之后如何引发页面渲染的"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_31-redux-dispatch之后如何引发页面渲染的"}},[t._v("#")]),t._v(" 31.redux dispatch之后如何引发页面渲染的")]),t._v(" "),s("h3",{attrs:{id:"_32-为什么使用redux"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_32-为什么使用redux"}},[t._v("#")]),t._v(" 32.为什么使用Redux")]),t._v(" "),s("h3",{attrs:{id:"_33-hooks原理-如何自定义hooks"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_33-hooks原理-如何自定义hooks"}},[t._v("#")]),t._v(" 33.hooks原理？如何自定义hooks")]),t._v(" "),s("h3",{attrs:{id:"_34-父子组件的挂载-卸载顺序"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_34-父子组件的挂载-卸载顺序"}},[t._v("#")]),t._v(" 34.父子组件的挂载，卸载顺序")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("挂载：\n\t1.父组件即将挂载\n\t2.子组件即将挂载\n\t3.子组件挂载完成\n\t4.父组件挂载完成\n卸载：\n\t\n")])])])])}),[],!1,null,null,null);a.default=n.exports}}]);