(window.webpackJsonp=window.webpackJsonp||[]).push([[35],{459:function(t,e,v){t.exports=v.p+"assets/img/MVVM1.c595e3e5.png"},595:function(t,e,v){"use strict";v.r(e);var a=v(42),r=Object(a.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h3",{attrs:{id:"一、什么是mvvm数据双向绑定"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#一、什么是mvvm数据双向绑定"}},[t._v("#")]),t._v(" 一、什么是MVVM数据双向绑定")]),t._v(" "),a("p",[a("code",[t._v("MVVM")]),t._v("数据双向绑定主要是指：数据变化更新视图，视图变化更新数据")]),t._v(" "),a("p",[a("img",{attrs:{src:v(459),alt:"MVVM"}})]),t._v(" "),a("p",[t._v("体现：")]),t._v(" "),a("ul",[a("li",[t._v("当输入框内容变化，data中数据同步变化。view => data")]),t._v(" "),a("li",[t._v("Data中的数据变化，文本节点的内容同步变化。Data => view")])]),t._v(" "),a("p",[t._v("其中，view变化更新data，可以通过监听事件的方式来实现，所以主要解决data变化更新view")]),t._v(" "),a("p",[t._v("主要实现以下四个步骤，来实现数据双向绑定：")]),t._v(" "),a("ul",[a("li",[t._v("监听器Observer,劫持并监听所有属性,如果属性发生变化，就通知订阅者；")]),t._v(" "),a("li",[t._v("实现订阅器Dep，收集订阅者，对监听器Observer和订阅者Watcher进行统一管理")]),t._v(" "),a("li",[t._v("实现订阅者Watcher，可以收集到属性的变化通知并执行相应的方法，从而更新视图；")]),t._v(" "),a("li",[t._v("实现一个解析器Compile，可以解析每个节点的相关指令，对模板")])])])}),[],!1,null,null,null);e.default=r.exports}}]);