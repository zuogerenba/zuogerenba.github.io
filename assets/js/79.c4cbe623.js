(window.webpackJsonp=window.webpackJsonp||[]).push([[79],{555:function(t,s,e){"use strict";e.r(s);var a=e(42),n=Object(a.a)({},(function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h3",{attrs:{id:"_1-验证token"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-验证token"}},[t._v("#")]),t._v(" 1.验证Token")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v('用到的东西：jwt，非对称性加密公钥私钥，使用openssl得到公钥私钥\n1.首先在post方法里面添加验证登录和login中间件去让用户登录，验证后颁发token。\n2.jtw.sign方法有三个参数，第一个对象（传了用户名和id），第二个私钥，第三个对象，配置了过期时间和加密算法，生成了token\n3.然后再写一个验证权限的middleware，每次操作前执行。\n\t1.每次请求时都会带上token，将其取出来。\n\t2.使用jwt.verify方法，三个参数，(取出的token, 公钥, 相同的加密算法)，得到解密后的token\n\t\n   const { id, name } = ctx.user;\n    const token = jwt.sign({ id, name }, PRIVATE_KEY, {\n      expiresIn: 60 * 60 * 24,\n      algorithm: "RS256"\n    });\n\n')])])]),e("h3",{attrs:{id:"_2-怎么保证不可以同时登陆"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-怎么保证不可以同时登陆"}},[t._v("#")]),t._v(" 2.怎么保证不可以同时登陆")]),t._v(" "),e("h3",{attrs:{id:"_3-怎么在node中和mysql结合起来的"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-怎么在node中和mysql结合起来的"}},[t._v("#")]),t._v(" 3.怎么在Node中和MySQL结合起来的")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("1.使用的是koa框架，项目里安装了mysql2，并创建连接池，目的是多次数据库交互时不用每一次创建连接\n2.创建的时候里面配置，host，user，密码，database，端口\n3.交互方面：\n\t在src下面创建了用于数据交互的目录，评论交互，登录注册交互等文件。\n\t使用了预处理的语句提高性能（解析，优化，转换=>执行）与安全execute(传入参数)\n\t在里面执行数据库查询，删除，新增修改语句\n4.然后再业务代码中调用导出的交互函数，比如登录，注册\n")])])]),e("h2",{attrs:{id:"二、express"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#二、express"}},[t._v("#")]),t._v(" 二、Express")]),t._v(" "),e("h3",{attrs:{id:"_1-express有哪些中间件"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-express有哪些中间件"}},[t._v("#")]),t._v(" 1.Express有哪些中间件")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("1.express.json()解析json\n2.express.static('./build')存放静态资源的中间件\n3.upload.any()上传文件中间件\n")])])])])}),[],!1,null,null,null);s.default=n.exports}}]);