(window.webpackJsonp=window.webpackJsonp||[]).push([[57],{527:function(t,a,s){"use strict";s.r(a);var r=s(42),e=Object(r.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h3",{attrs:{id:"_1-版本回退-前进"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-版本回退-前进"}},[t._v("#")]),t._v(" 1.版本回退/前进")]),t._v(" "),s("h4",{attrs:{id:"方法一"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#方法一"}},[t._v("#")]),t._v(" 方法一：")]),t._v(" "),s("p",[t._v("进行多次commit，想回到某一个commit之前的版本，可以使用")]),t._v(" "),s("ul",[s("li",[t._v("git reset --hard HEAD^")]),t._v(" "),s("li",[t._v("其中一个^可以回退一次commit之前， HEAD^^回退两个版本。")]),t._v(" "),s("li",[t._v("可以使用HEAD~n回退n个版本。")])]),t._v(" "),s("p",[t._v("回退版本之后，又想去到最版本，")]),t._v(" "),s("ul",[s("li",[t._v("git reset --hard ${git log}")]),t._v(" "),s("li",[t._v("版本号写前几位就行了")])]),t._v(" "),s("h3",{attrs:{id:"_2-暂存区-工作区"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-暂存区-工作区"}},[t._v("#")]),t._v(" 2.暂存区/工作区")]),t._v(" "),s("p",[t._v("本地文件就是工作区，add 之后就是就是暂存区，commit之后就是提交到本地分支里面，push之后就是远程分支了。")]),t._v(" "),s("h3",{attrs:{id:"分支管理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#分支管理"}},[t._v("#")]),t._v(" 分支管理")]),t._v(" "),s("h4",{attrs:{id:"创建远程origin的dev分支到本地"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#创建远程origin的dev分支到本地"}},[t._v("#")]),t._v(" 创建远程"),s("code",[t._v("origin")]),t._v("的"),s("code",[t._v("dev")]),t._v("分支到本地")]),t._v(" "),s("ul",[s("li",[t._v("git checkout -b dev origin/dev")])]),t._v(" "),s("h4",{attrs:{id:"删除远程分支"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#删除远程分支"}},[t._v("#")]),t._v(" 删除远程分支")]),t._v(" "),s("p",[t._v("git push origin --delete [branchname]")]),t._v(" "),s("h4",{attrs:{id:"删除本地分支"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#删除本地分支"}},[t._v("#")]),t._v(" 删除本地分支")]),t._v(" "),s("h4",{attrs:{id:"多人开发"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#多人开发"}},[t._v("#")]),t._v(" 多人开发")]),t._v(" "),s("p",[t._v("两个人在同一个分支上面进行开发，这时候你修改了内容并推送远程。你同事又修改了相同文件，并试图推送。那么这个时候就会报错。")]),t._v(" "),s("ul",[s("li",[t._v("git branch --set-upstream-to=origin/dev dev 本地分支与远程分支进行连接。")]),t._v(" "),s("li",[t._v("先git pull把远程最新代码抓取下来。")]),t._v(" "),s("li",[t._v("有冲突的话就先解决冲突，在提交。")])]),t._v(" "),s("p",[t._v("![image-20201224182646539](/Users/didi/Library/Application Support/typora-user-images/image-20201224182646539.png)")]),t._v(" "),s("p",[t._v("1.开发新需求都需要更新master最新代码，然后从master分支上拉最新的分支出来进行开发。")]),t._v(" "),s("p",[t._v("2.合并代码时，不要将其他分支的代码合并到自己的分支，不是自己改的代码，不要提交。")]),t._v(" "),s("p",[t._v("3.要经常提交代码，不要改动一大推代码再提交，否则容易造成代码冲突。")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("1.在master git pull拉取最新代码。问题可能出在这。\n2.创建\n3.\n")])])]),s("h4",{attrs:{id:"合并分支"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#合并分支"}},[t._v("#")]),t._v(" 合并分支")]),t._v(" "),s("ul",[s("li",[t._v("首先提交开发分支")]),t._v(" "),s("li",[t._v("切换到需要合并的分支上，如test")]),t._v(" "),s("li",[t._v("git merge 开发分支。")]),t._v(" "),s("li",[t._v("更新远程test分支。")])]),t._v(" "),s("h3",{attrs:{id:"git开发流程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#git开发流程"}},[t._v("#")]),t._v(" git开发流程")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("1.去最新代码 git pull origin master\n2.git checkout -b 你的分支\n3.git push origin 你的分支\n4.git pull\n5.将远程和本地进行连接git branch --set-upstream-to=origin/你的远程 你的本地\n6.git pull\n7.coding...\n8.git add -A -> git commit -> git push\n9.合并分支test，标题按照规范，描述需要尽量详细。\n10.测试环境没问题合并预发环境，预发环境没问题合并到master。\n")])])])])}),[],!1,null,null,null);a.default=e.exports}}]);