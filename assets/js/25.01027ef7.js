(window.webpackJsonp=window.webpackJsonp||[]).push([[25],{456:function(t,a,s){t.exports=s.p+"assets/img/diff1.f3d9f282.png"},457:function(t,a,s){t.exports=s.p+"assets/img/diff2.9dae11e7.png"},592:function(t,a,s){"use strict";s.r(a);var n=s(42),e=Object(n.a)({},(function(){var t=this,a=t.$createElement,n=t._self._c||a;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h3",{attrs:{id:"_1-数据发生变化时-vue是怎么更新节点的"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1-数据发生变化时-vue是怎么更新节点的"}},[t._v("#")]),t._v(" 1.数据发生变化时，vue是怎么更新节点的？")]),t._v(" "),n("p",[t._v("直接渲染DOM开销非常大，比如修改了某个数据，直接渲染到真实dom上会让整个dom树重排、重绘。通过diff，可以只更新修改的地方，而不是整个dom。怎么做？")]),t._v(" "),n("p",[t._v("先根据真实DOM，生成对应的"),n("code",[t._v("virtual dom")]),t._v("，当虚拟dom某个节点的数据改变后会生成一个新的"),n("code",[t._v("Vnode")]),t._v(",然后"),n("code",[t._v("Vnode")]),t._v("和"),n("code",[t._v("oldVnode")]),t._v("进行对比，发现有不一样的地方就直接修改在真实的DOM上，然后使"),n("code",[t._v("oldVnode")]),t._v("的值为"),n("code",[t._v("Vnode")]),t._v(".")]),t._v(" "),n("p",[t._v("diff的过程就是调用名为"),n("code",[t._v("patch")]),t._v("的函数，比较新旧节点，一边比较一边 真实DOM 打补丁。")]),t._v(" "),n("h3",{attrs:{id:"_2-虚拟dom和真实dom的区别"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_2-虚拟dom和真实dom的区别"}},[t._v("#")]),t._v(" 2.虚拟DOM和真实DOM的区别？")]),t._v(" "),n("p",[t._v("virtual DOM是将真实的DOM的数据抽取出来，以对象的形式模拟树形结构。")]),t._v(" "),n("p",[t._v("比如：")]),t._v(" "),n("p",[t._v("真实DOM：")]),t._v(" "),n("div",{staticClass:"language-html extra-class"},[n("pre",{pre:!0,attrs:{class:"language-html"}},[n("code",[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("div")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("p")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n        123\n    "),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("p")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("div")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),n("p",[t._v("虚拟DOM：")]),t._v(" "),n("div",{staticClass:"language-javascript extra-class"},[n("pre",{pre:!0,attrs:{class:"language-javascript"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" Vnode "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\ttag"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'div'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    children"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            tag"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'p'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            text"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("123")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("h3",{attrs:{id:"_3-比较的方式"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-比较的方式"}},[t._v("#")]),t._v(" 3.比较的方式？")]),t._v(" "),n("p",[t._v("在采取diff算法比较新旧节点的时候，比较只会在同层级进行，不会跨层比较。")]),t._v(" "),n("ul",[n("li",[t._v("两个代码第一层都是div，所以div只会和div进行比较，而不会div和span比较")]),t._v(" "),n("li",[t._v("第二层分别是p和span，所以p和span进行比较")])]),t._v(" "),n("div",{staticClass:"language-html extra-class"},[n("pre",{pre:!0,attrs:{class:"language-html"}},[n("code",[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("div")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("p")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n        123\n    "),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("p")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("div")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("div")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("span")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("456"),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("span")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("div")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),n("p",[n("img",{attrs:{src:s(456),alt:"diff"}})]),t._v(" "),n("h3",{attrs:{id:"_4-diff流程图"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_4-diff流程图"}},[t._v("#")]),t._v(" 4.diff流程图")]),t._v(" "),n("p",[n("img",{attrs:{src:s(457),alt:"diff流程图"}})]),t._v(" "),n("h3",{attrs:{id:"_5-具体分析"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_5-具体分析"}},[t._v("#")]),t._v(" 5.具体分析")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("1.同层节点比较，如果不一样，直接替换(就算是子节点一样也不会复用)，如果一样，进行下一层比较；\n2.找到对应的真实DOM：el\n3.判断Vnode和oldVnode是否指向同一个对象，如果是，直接return\n4.如果他们都有文本节点并且不相等，那么将el的文本节点设置为Vnode的文本节点。\n5.如果oldVnode有子节点而Vnode没有，则删除el的子节点\n6.如果oldVnode没有子节点而Vnode有，则将Vnode的子节点真实化之后添加到el\n7.如果两者都有子节点，则执行updateChildren函数比较子节点，这一步很重要\n\n")])])]),n("h3",{attrs:{id:"_6-部分源码"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_6-部分源码"}},[t._v("#")]),t._v(" 6.部分源码")]),t._v(" "),n("h4",{attrs:{id:"比较相同节点"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#比较相同节点"}},[t._v("#")]),t._v(" 比较相同节点")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("sameVnode")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("a"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" b")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    a"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("key "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" b"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("key "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v("  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// key值")]),t._v("\n    a"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("tag "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" b"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("tag "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v("  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 标签名")]),t._v("\n    a"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("isComment "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" b"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("isComment "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v("  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 是否为注释节点")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 是否都定义了data，data包含一些具体信息，例如onclick , style")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("isDef")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("data"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("isDef")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("b"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("data"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v("  \n    "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("sameInputType")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" b"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 当标签是<input>的时候，type必须相同")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("h3",{attrs:{id:"_7-总结"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_7-总结"}},[t._v("#")]),t._v(" 7.总结")]),t._v(" "),n("ul",[n("li",[t._v("根node+文+子+更新子")]),t._v(" "),n("li",[t._v("匹配结束两个条件：\n"),n("ul",[n("li",[t._v("olds>olde代表旧Vnode 先遍历完了，然后把多余的新Vnode根据index放入dom上")]),t._v(" "),n("li",[t._v("S>E，代表着新Vnode节点更少，那么在真实DOM区间[olds,olde]节点删除")])])])]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("数据改变的时候，触发diff\n生成一个新的Vnode与oldVnode进行比较\n第一层比较：\n\t如果是不同的Vnode(根据key，tag,data（onClick,style），type的)，就直接进行替换，将oldVnode替换成新\t\t\tVnode\n\t如果是相同的节点，就进行下一层比较。\n\n第二轮比较，就是打补丁：\n\t找到真实dom，判断新旧虚拟DOM是否指向同一个对象，是就return\n\t如果都有文本，且不相等，将真实DOM的文本节点设置为新Vnode的文本节点\n\t如果旧Vnode有子节点，而新Vnode没有节点，则删除真实DOM节点\n\t如果旧Vnode没有子节点，而新Vnode，则在真实DOM上创建节点\n\t如果两个都有子节点，则通过updateChildren比较子节点\n\n第二轮的子节点比较updateChildren(重点):\n\t四种比较方式：\n\t\tolds/olde/S/E分别指向旧节点的开始/结束/新节点的开始/新节点的结束\n\t\t1.如果olds和E匹配上，真实DOM第一个节点移到最后\n\t\t2.oldE和S匹配上，最后一个节点移动到最前，匹配上的两个指针向中间移动\n\t\t3.如果上面匹配没有成功，又有两种情况：\n\t\t\t3.1都有key：根据oldChild生成hash表，用S的key去匹配，匹配成功就是一样的节点，就在真实DOM里面将成功的节点移到最前面\n\t\t\t3.2没有key，就直接将S插入到真实DOM里面\n")])])]),n("h3",{attrs:{id:"_8-具体例子"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_8-具体例子"}},[t._v("#")]),t._v(" 8.具体例子")])])}),[],!1,null,null,null);a.default=e.exports}}]);