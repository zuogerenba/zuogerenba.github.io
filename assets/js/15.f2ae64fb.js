(window.webpackJsonp=window.webpackJsonp||[]).push([[15],{488:function(t,e,s){t.exports=s.p+"assets/img/innerHeight.cad822c3.png"},489:function(t,e,s){t.exports=s.p+"assets/img/offsetHeight.a4abddfc.png"},490:function(t,e,s){t.exports=s.p+"assets/img/clientHeight.bd590add.png"},602:function(t,e,s){"use strict";s.r(e);var r=s(42),n=Object(r.a)({},(function(){var t=this,e=t.$createElement,r=t._self._c||e;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("h3",{attrs:{id:"_1-滚动方法"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-滚动方法"}},[t._v("#")]),t._v(" 1.滚动方法")]),t._v(" "),r("h4",{attrs:{id:"window的scrolto方法"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#window的scrolto方法"}},[t._v("#")]),t._v(" window的scrolTo方法")]),t._v(" "),r("p",[r("strong",[t._v("作用")])]),t._v(" "),r("p",[t._v("滚动到页面的某个坐标")]),t._v(" "),r("p",[r("strong",[t._v("使用方法")])]),t._v(" "),r("div",{staticClass:"language-html extra-class"},[r("pre",{pre:!0,attrs:{class:"language-html"}},[r("code",[t._v("window.scrollTo(x, y)\nwindwo.scrollTo({top: y, left: x, behavior: smooth || instant})\n")])])]),r("h4",{attrs:{id:"element的scrollintoview方法"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#element的scrollintoview方法"}},[t._v("#")]),t._v(" element的scrollIntoView方法")]),t._v(" "),r("p",[r("strong",[t._v("作用")])]),t._v(" "),r("p",[t._v("滚动到该element所在位置")]),t._v(" "),r("p",[r("strong",[t._v("使用方法")])]),t._v(" "),r("ul",[r("li",[t._v("behavior是滑动的方式")]),t._v(" "),r("li",[t._v("block是定义垂直方向的对齐方式")]),t._v(" "),r("li",[t._v("inline是水平对齐的方式")])]),t._v(" "),r("div",{staticClass:"language-html extra-class"},[r("pre",{pre:!0,attrs:{class:"language-html"}},[r("code",[t._v("element.scrollIntoView();\nelement.scrollIntoView({\n\tbehavior: auto || smooth,\n\tblock: start || center || end, \n\tinline: start || center || end, \n});\n")])])]),r("h4",{attrs:{id:"思考与总结"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#思考与总结"}},[t._v("#")]),t._v(" 思考与总结")]),t._v(" "),r("p",[t._v("一开始在年度报告中使用的是scrolTo方法，但是并不起作用，最终采用了scrollIntoView方法得以解决第一屏滑到第二屏的问题。通过网上查阅资料发现也有许多scrollTo失效的例子，进过分析是因为这个方法的兼容性不太好，所以失效。")]),t._v(" "),r("h3",{attrs:{id:"_2-高度的相关属性"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-高度的相关属性"}},[t._v("#")]),t._v(" 2.高度的相关属性")]),t._v(" "),r("h4",{attrs:{id:"window-innerheight-outerheight"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#window-innerheight-outerheight"}},[t._v("#")]),t._v(" window.innerHeight/outerHeight")]),t._v(" "),r("p",[r("strong",[t._v("概念")])]),t._v(" "),r("p",[t._v("innerHeight:")]),t._v(" "),r("p",[t._v("浏览器的窗口的视口（viewport）高度，单位是像素；如果有水平滑动条也包含它的高度。")]),t._v(" "),r("p",[t._v("outerHeight:")]),t._v(" "),r("p",[t._v("整个浏览器窗口的高度 。")]),t._v(" "),r("p",[r("strong",[t._v("图像示例")])]),t._v(" "),r("p",[r("img",{attrs:{src:s(488),alt:"innerHeight"}})]),t._v(" "),r("h4",{attrs:{id:"htmlelement-offsetheight"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#htmlelement-offsetheight"}},[t._v("#")]),t._v(" HTMLElement.offsetHeight")]),t._v(" "),r("p",[r("strong",[t._v("概念")])]),t._v(" "),r("p",[t._v("它是该元素的像素高度，高度 = height + padding + border, 不包含伪元素的高度。而且数值是一个四舍五入的整数，需要浮点数用getBoundingClientRect。")]),t._v(" "),r("p",[r("strong",[t._v("图片示例")])]),t._v(" "),r("p",[r("img",{attrs:{src:s(489),alt:"offsetHeight"}})]),t._v(" "),r("h4",{attrs:{id:"element-clientheight"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#element-clientheight"}},[t._v("#")]),t._v(" element.clientHeight")]),t._v(" "),r("p",[r("strong",[t._v("概念")])]),t._v(" "),r("p",[t._v("它是元素内部的高度(单位像素)，包含内边距，但不包括水平滚动条、边框和外边距。  "),r("code",[t._v("clientHeight")]),t._v(" 可以通过 CSS "),r("code",[t._v("height")]),t._v(" + CSS "),r("code",[t._v("padding")]),t._v(" - 水平滚动条高度 (如果存在)来计算.")]),t._v(" "),r("p",[r("strong",[t._v("图片示例")])]),t._v(" "),r("p",[r("img",{attrs:{src:s(490),alt:"clientHeight"}})]),t._v(" "),r("h4",{attrs:{id:"element-scrollheight"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#element-scrollheight"}},[t._v("#")]),t._v(" Element.scrollHeight")]),t._v(" "),r("p",[r("strong",[t._v("概念")])]),t._v(" "),r("p",[r("code",[t._v("scrollHeight")]),t._v("的值等于该元素在不使用滚动条的情况下为了适应视口中所用内容所需的最小高度。 没有垂直滚动条的话，scrollHeight值与元素视图填充所有内容所需要的最小值"),r("code",[t._v("clientHeight")]),t._v("相同。包括元素的padding，但不包括元素的border和margin。")])])}),[],!1,null,null,null);e.default=n.exports}}]);