(window.webpackJsonp=window.webpackJsonp||[]).push([[8],{416:function(t,s,e){t.exports=e.p+"assets/img/Code_delegate.7f5bf735.png"},417:function(t,s,e){t.exports=e.p+"assets/img/Koa_01.20c119b8.png"},418:function(t,s,e){t.exports=e.p+"assets/img/Koa_listen.5e873d6b.png"},419:function(t,s,e){t.exports=e.p+"assets/img/Koa_use.2bdc78d9.png"},420:function(t,s,e){t.exports=e.p+"assets/img/Koa_callback.ece3c88b.png"},421:function(t,s,e){t.exports=e.p+"assets/img/Koa_compose.a9e02906.png"},422:function(t,s,e){t.exports=e.p+"assets/img/Koa_handleRequest.6ff420eb.png"},423:function(t,s,e){t.exports=e.p+"assets/img/express_next.cf876e75.png"},424:function(t,s,e){t.exports=e.p+"assets/img/Express_express.0658cc85.png"},425:function(t,s,e){t.exports=e.p+"assets/img/express_listen.04429de5.png"},571:function(t,s,e){"use strict";e.r(s);var a=e(42),r=Object(a.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"一、node"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#一、node"}},[t._v("#")]),t._v(" 一、Node")]),t._v(" "),a("h2",{attrs:{id:"二、koa"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#二、koa"}},[t._v("#")]),t._v(" 二、Koa")]),t._v(" "),a("h3",{attrs:{id:"_1-代理方法相关"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-代理方法相关"}},[t._v("#")]),t._v(" 1.代理方法相关")]),t._v(" "),a("ul",[a("li",[t._v("什么ctx.request.query/path/url = ctx.query/path/url?")]),t._v(" "),a("li",[t._v("ctx.response同理，中间的请求和相应都可以省略掉，源码做了什么呢？")]),t._v(" "),a("li",[t._v("其实在内部做了代理，在你调用"),a("strong",[t._v("ctx.响应方法")]),t._v("/"),a("strong",[t._v("ctx.请求方法")]),t._v("，是内部帮你用代理去调用"),a("strong",[t._v("ctx.request.响应方法")])])]),t._v(" "),a("img",{staticStyle:{zoom:"50%"},attrs:{src:e(416)}}),t._v(" "),a("p",[a("strong",[t._v("参数proto")])]),t._v(" "),a("ul",[a("li",[t._v("相当于context，直接调用这些方法的时候，是帮你查找proto上面的方法去调用")]),t._v(" "),a("li",[t._v("所以在项目中放心的去使用ctx.body返回东西，ctx.status去返回状态")])]),t._v(" "),a("h3",{attrs:{id:"_2-koa的本质"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-koa的本质"}},[t._v("#")]),t._v(" 2.Koa的本质")]),t._v(" "),a("ul",[a("li",[t._v("就是一个类，每次"),a("code",[t._v("const koa = new Koa()")]),t._v("得到的都是它的实例")])]),t._v(" "),a("img",{staticStyle:{zoom:"50%"},attrs:{src:e(417)}}),t._v(" "),a("h3",{attrs:{id:"_3-app-listen的本质"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-app-listen的本质"}},[t._v("#")]),t._v(" 3.app.listen的本质")]),t._v(" "),a("ul",[a("li",[t._v("实际上就是调用http.createServer这个方法")])]),t._v(" "),a("img",{staticStyle:{zoom:"50%"},attrs:{src:e(418)}}),t._v(" "),a("h4",{attrs:{id:"_4-app-use注册中间件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-app-use注册中间件"}},[t._v("#")]),t._v(" 4.app.use注册中间件")]),t._v(" "),a("ul",[a("li",[t._v("要求传入中间件的必须是function")]),t._v(" "),a("li",[t._v("确定是function后，就直接把fn放到中间件数组中")])]),t._v(" "),a("img",{staticStyle:{zoom:"50%"},attrs:{src:e(419)}}),t._v(" "),a("h3",{attrs:{id:"_5-koa的响应"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-koa的响应"}},[t._v("#")]),t._v(" 5.Koa的响应")]),t._v(" "),a("ul",[a("li",[t._v("处理响应的就是http.createServer中的this.callback()这个函数的返回值")]),t._v(" "),a("li",[t._v("看看this.callback的源码")])]),t._v(" "),a("img",{staticStyle:{zoom:"50%"},attrs:{src:e(420)}}),t._v(" "),a("h3",{attrs:{id:"_6-compose函数组合中间件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-compose函数组合中间件"}},[t._v("#")]),t._v(" 6.compose函数组合中间件")]),t._v(" "),a("ul",[a("li",[t._v("在里面调用一个dispatch(index)函数")]),t._v(" "),a("li",[t._v("fn是中间件，所以每次成功之后就会调用下一个中间件, fn(context, dispatch.bind(null, i+1));")]),t._v(" "),a("li",[t._v("在每一个中间件ctx.body，并不会立马返结果，要所有中间件处理完才会")])]),t._v(" "),a("img",{staticStyle:{zoom:"50%"},attrs:{src:e(421)}}),t._v(" "),a("img",{staticStyle:{zoom:"50%"},attrs:{src:e(422)}}),t._v(" "),a("h2",{attrs:{id:"三、express"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#三、express"}},[t._v("#")]),t._v(" 三、Express")]),t._v(" "),a("h3",{attrs:{id:"_1-中间件执行机制"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-中间件执行机制"}},[t._v("#")]),t._v(" 1.中间件执行机制")]),t._v(" "),a("ul",[a("li",[t._v("每个中间本身就是一个next，第一个next是默认执行的")]),t._v(" "),a("li",[t._v("在执行第一个中间，有碰到next，就再去进行匹配，调用下一个中间件，形成一个函数调用栈的过程")]),t._v(" "),a("li",[t._v("当最后一个next执行完，就会执行最后一个next后面的，再到第二个函数执行第二个函数next后面的，直到第一个中间件next后面的执行完，才算完全执行完。")])]),t._v(" "),a("img",{staticStyle:{zoom:"50%"},attrs:{src:e(423)}}),t._v(" "),a("h3",{attrs:{id:"_2-express的本质"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-express的本质"}},[t._v("#")]),t._v(" 2.express的本质")]),t._v(" "),a("ul",[a("li",[t._v("express就是一个函数，内部初始化了很多东西")]),t._v(" "),a("li",[t._v("最后返回的这个app也是一个函数(对象)，内部可以调用很多方法，如listen等")])]),t._v(" "),a("img",{staticStyle:{zoom:"50%"},attrs:{src:e(424)}}),t._v(" "),a("h3",{attrs:{id:"_3-app-listen的本质-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-app-listen的本质-2"}},[t._v("#")]),t._v(" 3.app.listen的本质")]),t._v(" "),a("ul",[a("li",[t._v("本质上就是在内部调用http.createServer这个方法")])]),t._v(" "),a("img",{staticStyle:{zoom:"50%"},attrs:{src:e(425)}})])}),[],!1,null,null,null);s.default=r.exports}}]);